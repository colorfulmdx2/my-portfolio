{"version":3,"sources":["About-me/About.module.scss","Header/Header.module.scss","Contact-me/Contact-me.module.css","assets/images/twitter.svg","assets/images/facebook.svg","assets/images/git-hub.svg","assets/images/instagram.svg","assets/images/linked-in.svg","assets/images/react.svg","assets/video/Fuego_de_Refineria.mp4","Header/Header.tsx","About-me/About.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","useState","burger","setBurger","className","style","header","content","logo","src","react","navigation","href","onClick","small_menu_container","small_menu","open","About","num","setNum","useEffect","setTimeout","i","newI","about","headingsWrapper","mainHeading","subHeading","span","hidden_span","color","elementsContainer","sideLanguages","leng","sidesContacts","contactElement","twitter","facebook","linked","git","instagram","App","height","width","_video","preload","autoPlay","loop","muted","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f894ac07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"About_about__1q2WY\",\"headingsWrapper\":\"About_headingsWrapper__34R-t\",\"mainHeading\":\"About_mainHeading__3-Zly\",\"subHeading\":\"About_subHeading__fT6GU\",\"span\":\"About_span__3cwSO\",\"typewriter\":\"About_typewriter__2D3q8\",\"hidden_span\":\"About_hidden_span__1pBwG\",\"elementsContainer\":\"About_elementsContainer__1Gc0a\",\"sideLanguages\":\"About_sideLanguages__3qu0-\",\"leng\":\"About_leng__1LTw5\",\"sidesContacts\":\"About_sidesContacts__148Xw\",\"contactElement\":\"About_contactElement__20wde\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__24swb\",\"content\":\"Header_content__3F056\",\"logo\":\"Header_logo__2fO07\",\"navigation\":\"Header_navigation__pWL_B\",\"burger\":\"Header_burger__3JqCd\",\"small_menu_container\":\"Header_small_menu_container__4o88P\",\"open\":\"Header_open__bhF3V\",\"small_menu\":\"Header_small_menu__2VzSV\",\"small_menu_hidden\":\"Header_small_menu_hidden__1GKNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact-me_contact__e9K3S\",\"content\":\"Contact-me_content__2HYwC\",\"form\":\"Contact-me_form__1Wrko\",\"button\":\"Contact-me_button__FgB44\"};","module.exports = __webpack_public_path__ + \"static/media/twitter.0b8e44d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.49f5495c.svg\";","module.exports = __webpack_public_path__ + \"static/media/git-hub.bb281b23.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.36e36bb5.svg\";","module.exports = __webpack_public_path__ + \"static/media/linked-in.b800642f.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.c5c83a61.svg\";","module.exports = __webpack_public_path__ + \"static/media/Fuego_de_Refineria.26e8ee43.mp4\";","import React, {useState} from 'react';\r\nimport style from './Header.module.scss'\r\nimport '../container/Container.css'\r\nimport react from '../assets/images/react.svg'\r\n\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const [burger, setBurger] = useState(false)\r\n\r\n    const burgerChange = () => {\r\n        setBurger(!burger)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={style.header}>\r\n            <div>\r\n                <div className={style.content}>\r\n\r\n                    <div className={style.logo}>\r\n                        <img src={react}/>\r\n                    </div>\r\n\r\n                    <div className={style.navigation}>\r\n                        <a href='/'>About</a>\r\n                        <a href='/'>Resume</a>\r\n                        <a href='/'>Portfolio</a>\r\n                        <a href='/'>Blog</a>\r\n                        <a href='/'>Contact</a>\r\n                    </div>\r\n\r\n                    <div className={style.burger}\r\n                         onClick={burgerChange}\r\n                         >\r\n                    </div>\r\n\r\n                    {\r\n                        burger && <div className={style.small_menu_container} onClick={() => {setBurger(false)}}>\r\n                            <div className={burger ? style.small_menu + ' ' + style.open : style.small_menu}>\r\n                                <a href='/'>About</a>\r\n                                <a href='/'>Resume</a>\r\n                                <a href='/'>Portfolio</a>\r\n                                <a href='/'>Blog</a>\r\n                                <a href='/'>Contact</a>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {useEffect, useState} from 'react';\r\nimport style from './About.module.scss'\r\n// import '../container/Container.css'\r\nimport twitter from '../assets/images/twitter.svg'\r\nimport facebook from '../assets/images/facebook.svg'\r\nimport git from '../assets/images/git-hub.svg'\r\nimport instagram from '../assets/images/instagram.svg'\r\nimport linked from '../assets/images/linked-in.svg'\r\nimport Header from \"../Header/Header\";\r\n// @ts-ignore\r\nimport _video from '../assets/video/Fuego.mp4'\r\n\r\n\r\nconst About = () => {\r\n\r\n    const [num, setNum] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => setNum((i) => {\r\n            let newI = i + 1;\r\n            if (newI === 2) newI = 0;  //(newI === 2) +1 если хотим еще одно слово\r\n            return newI\r\n        }), 3000);\r\n    }, [num])\r\n\r\n\r\n    return (\r\n        <div className={style.about}\r\n             onClick={() => {\r\n             }}>\r\n\r\n\r\n            <Header/>\r\n\r\n            <div className={style.headingsWrapper}>\r\n                <div className={style.mainHeading}>Viktor Berezovsky</div>\r\n                <div className={style.subHeading}>I'm a\r\n                    <div className={(num === 0) ? style.span : style.span + ' ' + style.hidden_span}><span\r\n                        style={{color: 'white'}}>{'Developer'}</span></div>\r\n                    <div className={(num === 1) ? style.span : style.span + ' ' + style.hidden_span}><span\r\n                        style={{color: 'white'}}>{'Freelancer'}</span></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={style.elementsContainer}>\r\n                <div className={style.sideLanguages}>\r\n                    <div className={style.leng}>EN</div>\r\n                    <div className={style.leng}>RU</div>\r\n                </div>\r\n                <div className={style.sidesContacts}>\r\n                    <div className={style.contactElement} ><a href='https://www.twitch.tv/'><img src={twitter}/></a></div>\r\n                    <div className={style.contactElement} ><a href={'facebook.com'}><img src={facebook}/></a></div>\r\n                    <div className={style.contactElement} ><a href={'twitter.com'}><img src={linked}/></a></div>\r\n                    <div className={style.contactElement} ><a href={'twitter.com'}><img src={git}/></a></div>\r\n                    <div className={style.contactElement} ><a href={'twitter.com'}><img src={instagram}/></a></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Contact from \"./Contact-me/Contact-me\";\nimport About from \"./About-me/About\";\n//@ts-ignore\nimport _video from \"./assets/video/Fuego_de_Refineria.mp4\";\n\nfunction App() {\n    return (\n        <div className={'app'}>\n\n            <video height=\"150%\" width=\"auto\" src={_video} preload=\"auto\" autoPlay={true}\n                   loop={true} muted={true}></video>\n\n            <About/>\n\n            {\n                false && <Contact/>\n            }\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}